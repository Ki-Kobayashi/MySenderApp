plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // 👽secrets-gradle
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    // 🛑hilt
    id 'dagger.hilt.android.plugin'
    // 🛑アノテーション使うなら、ライブラリに必須！一番下に記載すること
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.send.mysenderapp"
        minSdk 28
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding  true
        dataBinding  true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // 🟡Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // 🟡Room
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    kapt("androidx.room:room-compiler:$room_version")

    // 🟡Fragment KTX(java1.8を使う必要がある)🛑コルーチンも入っている（Fragment👈ViewModel👈coroutin）
    implementation("androidx.fragment:fragment-ktx:$fragment_version")

    // 🟡Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$ktx_crtn_version")

    // 🛑hilt（Diツール）
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest  "com.google.dagger:hilt-compiler:$hilt_version"

    // 🟡RecyclerView
    implementation("androidx.recyclerview:recyclerview:1.2.1")
    // For control over item selection of both touch and mouse driven selection
    implementation("androidx.recyclerview:recyclerview-selection:1.1.0")

    // 🟡Retrofit（Api通信：OkHttpをラップしたライブラリ）
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // 🟡Moshi（Jsonパーサ：
    //  GsonはDeprecate---Gsonは、Non-NUllな変数にNullを入れてしまう恐れがあるらしい）
    // https://qiita.com/egugue/items/f1f35c250f7a25768751
    // Moshi：https://github.com/square/moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    implementation 'com.squareup.picasso:picasso:2.71828'
}

// 🛑hilt
// 一部の注釈プロセッサ（ AutoFactory など）は、宣言シグネチャの正確な型に依存しています。
// デフォルトでは、Kaptはすべての不明なタイプ（生成されたクラスのタイプを含む）を
// NonExistentClass に置き換えますが、この動作を変更できます。
// build.gradle ファイルに追加のフラグを追加して、
// スタブで推論するエラータイプを有効にする
kapt {
    correctErrorTypes true
}